{"version":3,"sources":["src/utils.js","src/index.js"],"names":["UL","document","querySelector","CURRENT_LIST_NO","ulType","addAThing","addEventListener","thing","createElement","innerText","append","removeLastThing","removeChild","lastChild","toggleType","container","innerHTML","replace","observer","MutationObserver","mutationList","forEach","mutation","type","addedNodes","length","console","log","removedNodes","observe","attributes","childList","subtree"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAO,IAAMA,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,IAAvB,CAAX;;AAEP,IAAIC,eAAe,GAAG,CAAtB;AACA,IAAIC,MAAM,GAAG,IAAb;;AAEO,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AAC7BJ,EAAAA,QAAQ,CAACC,aAAT,CAAuB,MAAvB,EAA+BI,gBAA/B,CAAgD,OAAhD,EAAyD,YAAM;AAC7DH,IAAAA,eAAe;AACf,QAAMI,KAAK,GAAGN,QAAQ,CAACO,aAAT,CAAuB,IAAvB,CAAd;AACAD,IAAAA,KAAK,CAACE,SAAN,uBAA+BN,eAA/B;AACAH,IAAAA,EAAE,CAACU,MAAH,CAAUH,KAAV;AACD,GALD;AAMD,CAPM;;;;AASA,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AACnCV,EAAAA,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCI,gBAAlC,CAAmD,OAAnD,EAA4D,YAAM;AAChEN,IAAAA,EAAE,CAACY,WAAH,CAAeZ,EAAE,CAACa,SAAlB;AACAV,IAAAA,eAAe;AAChB,GAHD;AAID,CALM;;;;AAOA,IAAMW,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9Bb,EAAAA,QAAQ,CAACC,aAAT,CAAuB,SAAvB,EAAkCI,gBAAlC,CAAmD,OAAnD,EAA4D,YAAM;AAChE,QAAMS,SAAS,GAAGd,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAlB;AACAa,IAAAA,SAAS,CAACC,SAAV,GAAsBD,SAAS,CAACC,SAAV,CAAoBC,OAApB,CACpBb,MAAM,GAAG,IAAH,GAAU,IADI,EAEpBA,MAAM,GAAG,IAAH,GAAU,IAFI,CAAtB;AAIAA,IAAAA,MAAM,GAAG,CAACA,MAAV;AACD,GAPD;AAQD,CATM;;;;;;ACrBP;;AAEA;AACA,+BACA;;AAEA,IAAMc,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB,UAACC,YAAD,EAAkB;AACtDA,EAAAA,YAAY,CAACC,OAAb,CAAqB,UAAAC,QAAQ,EAAI;AAC/B,QAAIA,QAAQ,CAACC,IAAT,KAAkB,WAAlB,IAAiCD,QAAQ,CAACE,UAAT,CAAoBC,MAAzD,EAAiE;AAC/DC,MAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ;AACD;;AAED,QAAIL,QAAQ,CAACC,IAAT,KAAkB,WAAlB,IAAiCD,QAAQ,CAACM,YAAT,CAAsBH,MAA3D,EAAmE;AACjEC,MAAAA,OAAO,CAACC,GAAR,CAAY,0BAAZ;AACD;AACF,GARD;AASD,CAVgB,CAAjB;AAYAT,QAAQ,CAACW,OAAT,CAAiB7B,SAAjB,EAAqB;AACnB8B,EAAAA,UAAU,EAAE,IADO;AAEnBC,EAAAA,SAAS,EAAE,IAFQ;AAGnBC,EAAAA,OAAO,EAAE;AAHU,CAArB","file":"src.a2b27638.map","sourceRoot":"..","sourcesContent":["export const UL = document.querySelector('ul')\n\nlet CURRENT_LIST_NO = 3\nlet ulType = true\n\nexport const addAThing = () => {\n  document.querySelector('#add').addEventListener('click', () => {\n    CURRENT_LIST_NO++;\n    const thing = document.createElement('li')\n    thing.innerText = `Something ${CURRENT_LIST_NO}`\n    UL.append(thing)\n  })\n}\n\nexport const removeLastThing = () => {\n  document.querySelector('#remove').addEventListener('click', () => {\n    UL.removeChild(UL.lastChild);\n    CURRENT_LIST_NO--;\n  })\n}\n\nexport const toggleType = () => {\n  document.querySelector('#toggle').addEventListener('click', () => {\n    const container = document.querySelector('.ul-c')\n    container.innerHTML = container.innerHTML.replace(\n      ulType ? 'ul' : 'ol',\n      ulType ? 'ol' : 'ul'\n    )\n    ulType = !ulType\n  })\n}","import { UL, addAThing, removeLastThing, toggleType } from './utils'\n\naddAThing();\nremoveLastThing();\n// toggleType();\n\nconst observer = new MutationObserver((mutationList) => {\n  mutationList.forEach(mutation => {\n    if (mutation.type === 'childList' && mutation.addedNodes.length) {\n      console.log('A child has been added');\n    } \n\n    if (mutation.type === 'childList' && mutation.removedNodes.length) {\n      console.log('A child has been removed');\n    }\n  })\n})\n\nobserver.observe(UL, {\n  attributes: true,\n  childList: true,\n  subtree: true\n})"]}